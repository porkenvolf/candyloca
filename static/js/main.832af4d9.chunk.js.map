{"version":3,"sources":["candy-machine.ts","img/TWicon.png","img/DSicon.png","img/MEicon.png","img/heroPar.png","img/iso.png","img/roadmap.png","img/meetTeam.png","img/faq.png","img/mintDay.png","img/bg.jpg","img/bichoHead.png","img/bichoManos.png","img/bright.png","img/fog.png","img/Head.png","img/logoBig.png","img/ray.png","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","useState","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","balance","LAMPORTS_PER_SOL","useEffect","className","src","logo2","alt","href","TWicon","DSicon","MEicon","toBase58","style","position","bg","ray","bichoManos","bichoHead","fog","Head","bright","logoBig","heroPar","imgMintDay","disabled","onClick","variant","CircularProgress","date","onMount","onComplete","renderer","imgRoadmap","imgMeetTeam1","height","width","imgFaq","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","Snackbar","autoHideDuration","onClose","Alert","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.832af4d9.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","export default __webpack_public_path__ + \"static/media/TWicon.65db7887.png\";","export default __webpack_public_path__ + \"static/media/DSicon.7e09fe68.png\";","export default __webpack_public_path__ + \"static/media/MEicon.b5e0d319.png\";","export default __webpack_public_path__ + \"static/media/heroPar.44311ac1.png\";","export default __webpack_public_path__ + \"static/media/iso.91e7e2a1.png\";","export default __webpack_public_path__ + \"static/media/roadmap.ddd4ce89.png\";","export default __webpack_public_path__ + \"static/media/meetTeam.663effe2.png\";","export default __webpack_public_path__ + \"static/media/faq.1175f336.png\";","export default __webpack_public_path__ + \"static/media/mintDay.4f5aba32.png\";","export default __webpack_public_path__ + \"static/media/bg.0d306ab7.jpg\";","export default __webpack_public_path__ + \"static/media/bichoHead.fb31fed2.png\";","export default __webpack_public_path__ + \"static/media/bichoManos.f8374eef.png\";","export default __webpack_public_path__ + \"static/media/bright.71c7e968.png\";","export default __webpack_public_path__ + \"static/media/fog.a6015e6a.png\";","export default __webpack_public_path__ + \"static/media/Head.7851f720.png\";","export default __webpack_public_path__ + \"static/media/logoBig.9d208b25.png\";","export default __webpack_public_path__ + \"static/media/ray.05098f44.png\";","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar, Collapse } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\n/* IMAGES */\nimport TWicon from './img/TWicon.png';\nimport DSicon from './img/DSicon.png';\nimport MEicon from './img/MEicon.png';\nimport navIcon from './img/menu.svg';\nimport heroPar from './img/heroPar.png';\nimport logo1 from './img/banner1.jpg';\nimport logo2 from './img/iso.png';\nimport logo3 from './img/logo-oaparasites-03.png';\nimport logo4 from './img/logo-oaparasites-04.png';\nimport imgRoadmap from './img/roadmap.png';\nimport imgMeetTeam1 from './img/meetTeam.png';\nimport imgmeetTeam2 from './img/meetTeam2.png';\nimport imgFaq from './img/faq.png';\nimport imgMintDay from './img/mintDay.png';\n\n/* IMAGES ANIM */\nimport bg from './img/bg.jpg';\nimport bichoHead from './img/bichoHead.png';\nimport bichoManos from './img/bichoManos.png';\nimport bright from './img/bright.png';\nimport fog from './img/fog.png';\nimport Head from './img/Head.png';\nimport logoBig from './img/logoBig.png';\nimport ray from './img/ray.png';\n\nimport { Parallax, Background } from 'react-parallax';\n\n\n\n\nimport { ExpandMore } from '@material-ui/icons';\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\n\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n\n\n\n  return (\n\n\n\n    <main>\n      \n\n      <div className=\"principal\">\n        <header>\n          <div className=\"nbar\">\n            <div className=\"logo-container\">\n              <img src={logo2} alt=\"Logo\" />\n            </div>\n\n            <div className=\"left\">\n              <ul className=\"left-nav\">\n                <li className=\"nav-link\"><a href=\"#\">ABOUT</a></li>\n                <li className=\"nav-link\"><a href=\"#\">ROADMAP</a></li>\n                <li className=\"nav-link\"><a href=\"#\">TEAM</a></li>\n                <li className=\"nav-link\"><a href=\"#\">FAQ</a></li>\n              </ul>\n            </div>\n            <div className=\"right\">\n              <ul className=\"right-nav\">\n                <li className=\"nav-link\"><a href=\"#\"></a></li>\n\n                <li className=\"nav-link\"><a href=\"#\"><img src={TWicon} alt=\"\" /></a></li>\n                <li className=\"nav-link\"><a href=\"#\"><img src={DSicon} alt=\"\" /></a></li>\n                <li className=\"nav-link\"><a href=\"#\"><img src={MEicon} alt=\"\" /></a></li>\n\n                <li className=\"connect\"><ConnectButton>{wallet ? shortenAddress(wallet.publicKey.toBase58() || \"\") : \"Disconnected\"}</ConnectButton></li>\n              </ul>\n            </div>\n          </div>\n\n\n        </header>\n\n\n\n\n        <div className=\"heroAnim\" style={{ position: \"fixed\" }}>\n          <div id=\"heroBG\" className=\"heroBG spaused\"><img src={bg} alt=\"\" /></div>\n          <div id=\"ray1cont\" className=\"heroBG\"><div id=\"ray1\" className=\"ray1\"><img src={ray} alt=\"\" /></div></div>\n          <div id=\"ray1_2cont\" className=\"heroBG\"><div id=\"ray1_2\" className=\"ray1_2\"><img src={ray} alt=\"\" /></div></div>\n          <div id=\"ray2cont\" className=\"heroBG\"><div id=\"ray2\" className=\"ray2\"><img src={ray} alt=\"\" /></div></div>\n          <div id=\"ray2_2cont\" className=\"heroBG\"><div id=\"ray2_2\" className=\"ray2_2\"><img src={ray} alt=\"\" /></div></div>\n          <div id=\"bichoHands\" className=\"bichoHands dpaused\"><div className=\"paraHandsBreathe\"><img className=\"dark\" src={bichoManos} alt=\"\" /></div></div>\n          <div id=\"bichoHead\" className=\"bichoHead dpaused\"><div className=\"paraHeadBreathe\"><img className=\"dark\" src={bichoHead} alt=\"\" /></div></div>\n          <div className=\"fog1\"><img src={fog} alt=\"\" /></div>\n          <div className=\"fog2\"><img src={fog} alt=\"\" /></div>\n          \n          <div id=\"heroHost\" className=\"heroHost dpaused\"><div className=\"dark\"><img src={Head} alt=\"\" /></div></div>\n          <div id=\"bright\" className=\"brightUP\"><div className=\"brightGlow\"><img src={bright} alt=\"\" /></div></div>\n          <div id=\"blackIntro\" className=\"blackIntro spaused\"></div>\n\n          <div id=\"logoBig\" className=\"logoBig dpaused\"><img src={logoBig} alt=\"\" /></div>\n          \n          \n          {/* <div id=\"heroHost\" className=\"heroHost dpaused\"><div className=\"dark\"><img src={Head} alt=\"\" /></div></div> */}\n\n\n        </div>\n        <div className=\"heroAnim\">\n          \n          \n          \n\n\n        </div>\n\n        \n        <div className=\"cienVwSep\">\n          <img src={logoBig} alt=\"\" />\n          </div>\n         \n        <div className=\"pageContent\">\n\n\n          <div className=\"mint\">\n\n\n            <div className=\"sectionContent\">\n\n              <div className=\"left-col\">\n                {/* <img className=\"logoMobile\"src={logo1} alt=\"\" /><br /> */}\n                <img src={heroPar} alt=\"\" className=\"heroPar\" />\n              </div>\n              <div className=\"right-col\">\n                <div>\n\n                  <img src={imgMintDay} alt=\"\" />\n\n\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                </div>\n                <div className=\"mintButton\">\n                  <MintContainer>\n                    <MintButton\n                      disabled={isSoldOut || isMinting || !isActive}\n                      onClick={onMint}\n                      variant=\"contained\"\n                    >\n                      {isSoldOut ? (\n                        \"SOLD OUT\"\n                      ) : isActive ? (\n                        isMinting ? (\n                          <CircularProgress />\n                        ) : (\n                          \"MINT\"\n                        )\n                      ) : (\n                        <Countdown\n                          date={startDate}\n                          onMount={({ completed }) => completed && setIsActive(true)}\n                          onComplete={() => setIsActive(true)}\n                          renderer={renderCounter}\n                        />\n                      )}\n                    </MintButton>\n\n                  </MintContainer>\n\n\n                  {wallet && <p>Remaining: {itemsRemaining}</p>}\n\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n          {/* ROADMAP SECTION */}\n          <hr />\n\n          <div className=\"roadmap\">\n            <div className=\"sectionName\">\n              <img src={imgRoadmap} alt=\"\" />\n            </div>\n            {/* =============================================== */}\n            <div className=\"roadItem\">\n              <div className=\"roadLeftCol\">\n                <div className=\"roadDate\">JANUARY 12, 2022</div>\n                <div className=\"roadDesc\">\n                  SHORT DESCRIPTION\n                </div>\n              </div>\n              <div className=\"roadRightCol\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </div>\n            </div>\n\n            {/* =============================================== */}\n            <div className=\"roadItem\">\n              <div className=\"roadLeftCol\">\n                <div className=\"roadDate\">JANUARY 12, 2022</div>\n                <div className=\"roadDesc\">\n                  SHORT DESCRIPTION\n                </div>\n              </div>\n              <div className=\"roadRightCol\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </div>\n            </div>\n\n            {/* =============================================== */}\n            <div className=\"roadItem\">\n              <div className=\"roadLeftCol\">\n                <div className=\"roadDate\">JANUARY 12, 2022</div>\n                <div className=\"roadDesc\">\n                  SHORT DESCRIPTION\n                </div>\n              </div>\n              <div className=\"roadRightCol\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </div>\n            </div>\n          </div>\n\n\n          {/* MEET THE TEAM */}\n          <hr />\n\n          <div className=\"team\">\n            <div className=\"sectionName\"><img src={imgMeetTeam1} alt=\"\" /></div>\n\n            <div className=\"sectionContent\">\n              {/* =============================================== */}\n              <div className=\"teamMember\">\n                <div className=\"memberTW\"><img src={TWicon} alt=\"\" height=\"50\" width=\"50\" /></div>\n                <div className=\"memberPic\"><img src={heroPar} alt=\"\" /></div>\n                <div className=\"memberName\">ERNI<a href=\"#\"></a></div>\n                <div className=\"memberRole\">Artist, Autist, Armpits.</div>\n                <div className=\"memberDesc\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"</div>\n\n              </div>\n              {/* =============================================== */}\n              <div className=\"teamMember\">\n                <div className=\"memberTW\"><img src={TWicon} alt=\"\" height=\"50\" width=\"50\" /></div>\n                <div className=\"memberPic\"><img src={heroPar} alt=\"\" /></div>\n                <div className=\"memberName\">GONZA<a href=\"#\"></a></div>\n                <div className=\"memberRole\">Italiano, Mascarpone, Fan de Laura Pausini.</div>\n                <div className=\"memberDesc\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"</div>\n              </div>\n              {/* =============================================== */}\n              <div className=\"teamMember\">\n                <div className=\"memberTW\"><img src={TWicon} alt=\"\" height=\"50\" width=\"50\" /></div>\n                <div className=\"memberPic\"><img src={heroPar} alt=\"\" /></div>\n                <div className=\"memberName\">JOACO<a href=\"#\"></a></div>\n                <div className=\"memberRole\">Techycroto, jack of some trades master of none.</div>\n                <div className=\"memberDesc\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"</div>\n              </div>\n\n\n\n\n\n\n            </div>\n          </div>\n\n\n\n          {/* FAQ */}\n          <hr />\n          <div className=\"faq\">\n            <div className=\"sectionName\"><img src={imgFaq} alt=\"\" /></div>\n            <div className=\"sectionContent\">\n\n\n\n              <Accordion className=\"acc\">\n\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                  Accordion 1\n                </AccordionSummary>\n\n                <AccordionDetails>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                  sit amet blandit leo lobortis eget.\n                </AccordionDetails>\n\n              </Accordion>\n              <Accordion className=\"acc\">\n\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                  Accordion 2\n                </AccordionSummary>\n\n                <AccordionDetails>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                  sit amet blandit leo lobortis eget.\n                </AccordionDetails>\n\n              </Accordion>\n              <Accordion className=\"acc\">\n\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                  Accordion 3\n                </AccordionSummary>\n\n                <AccordionDetails>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                  sit amet blandit leo lobortis eget.\n                </AccordionDetails>\n\n              </Accordion>\n              <Accordion className=\"acc\">\n\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                  Accordion 4\n                </AccordionSummary>\n\n                <AccordionDetails>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                  sit amet blandit leo lobortis eget.\n                </AccordionDetails>\n\n              </Accordion>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            </div>\n\n          </div>\n\n\n          {/* FOOTER */}\n        <div className=\"footer\">\n          ©2021 Overattached Parasites. All rights reserved.\n        </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n      </div>\n\n\n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}\n\n      {wallet && <p>Total Available: {itemsAvailable}</p>}\n\n      {wallet && <p>Redeemed: {itemsRedeemed}</p>}\n\n      {wallet && <p>Remaining: {itemsRemaining}</p>} \n      \n      {wallet && <p>Minted: {itemsRedeemed}/{itemsAvailable}</p>}\n      */}\n\n\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n\n\n      \n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\n\n\n\n\nexport default Home;\n\n\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './anim.css'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}